Package gramm;

Helpers
 letter = [['a' .. 'z'] + ['A' .. 'Z']];
 digit = ['0' .. '9'];
 period = '.';

Tokens
 print = 'print';
 mod = 'mod';
 number = digit+;
 fnumber = digit* period digit*;
 word = letter (letter | digit)*;
 comma = ',';
 plus = '+';
 minus = '-';
 assign = '=';
 l_br = '(';
 r_br = ')';
 div = '/';
 mul = '*';
 nln = 10;
 blank = ' '+;
// blank = (' ' | 13 | 10)+;

Ignored Tokens
 blank;

Productions
 program = statement |
  {progn} program nln statement;

 statement = 
  {assignment} assignment |
  {printer} printer;

 assignment = var_name assign expr;

 printer = print expr_list;

 expr_list = expr |
  {several} expr_list comma expr;

 expr = factor |
  {sum} expr plus factor |
  {sub} expr minus factor ;

 factor = unit |
  {mul} factor mul unit |
  {div} factor div unit |
  {mod} factor mod unit;
 
 unit = operand |
  {inverted} minus unit |
  {call} fun_name l_br unit r_br;

 operand = val |
  {nested} l_br expr r_br;

 val = var_name |
  {const} number |
  {fconst} fnumber;

 var_name = word;

 fun_name = word;
 
